// -*- C++ -*-
/* $Id$ */

/* canvas.cc
 *
 * Copyright (C) 1998 EMC Capital Management Inc.
 * Developed by Havoc Pennington <hp@pobox.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtk/gtk.h>

#include <libgnomecanvasmm/canvas-group.h>
#include <libgnomecanvasmm/canvas-item.h>
#include <libgnomecanvasmm/wrap_init.h>
#include <libgnomecanvas/gnome-canvas-util.h>

namespace Gnome
{

namespace Canvas
{

bool
Canvas::get_color(const Glib::ustring& spec, Gdk::Color& color)
{
  GdkColor* pColor = 0;
  gboolean result = gnome_canvas_get_color(gobj(), const_cast<gchar*>(spec.c_str()), pColor);
  color = Glib::wrap(pColor);
  return (result == TRUE);
}


CanvasAA::CanvasAA()
{
}

CanvasAA::~CanvasAA()
{
}

Art::AffineTrans Canvas::w2c_affine() const
{
  double pAffine[6];
  gnome_canvas_w2c_affine(const_cast<GnomeCanvas*>(gobj()), pAffine);

  return Art::AffineTrans(pAffine);
}

} /* namespace Canvas */
} /* namespace Gnome */
